// <auto-generated />
using System;
using DepartmentalStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DepartmentalStore.Migrations
{
    [DbContext(typeof(DepartmentalStoreDBContext))]
    [Migration("20220809055942_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DepartmentalStore.Models.AdminMaster", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"), 1L, 1);

                    b.Property<string>("AdminName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("adminmasters");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Beverages", b =>
                {
                    b.Property<int>("BeverageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeverageId"), 1L, 1);

                    b.Property<string>("BeverageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("BeveragePrice")
                        .HasColumnType("real");

                    b.Property<int>("BeverageQty")
                        .HasColumnType("int");

                    b.HasKey("BeverageId");

                    b.ToTable("beverages");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MobileNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Fruits", b =>
                {
                    b.Property<int>("FruitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FruitId"), 1L, 1);

                    b.Property<string>("FruitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FruitPrice")
                        .HasColumnType("real");

                    b.Property<int>("FruitQty")
                        .HasColumnType("int");

                    b.HasKey("FruitId");

                    b.ToTable("fruits");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Groceries", b =>
                {
                    b.Property<int>("GroceryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroceryId"), 1L, 1);

                    b.Property<string>("GroceryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("GroceryPrice")
                        .HasColumnType("real");

                    b.Property<int>("GroceryQty")
                        .HasColumnType("int");

                    b.HasKey("GroceryId");

                    b.ToTable("groceries");
                });

            modelBuilder.Entity("DepartmentalStore.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailID"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderMasterId")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderMasterId");

                    b.HasIndex("PaymentId");

                    b.ToTable("orderdetails");
                });

            modelBuilder.Entity("DepartmentalStore.Models.OrderMaster", b =>
                {
                    b.Property<int>("OrderMasterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderMasterID"), 1L, 1);

                    b.Property<int>("BeverageDetailId")
                        .HasColumnType("int");

                    b.Property<int>("FruitDetailId")
                        .HasColumnType("int");

                    b.Property<int>("GroceryDetailId")
                        .HasColumnType("int");

                    b.Property<int>("VegetableDetailId")
                        .HasColumnType("int");

                    b.HasKey("OrderMasterID");

                    b.HasIndex("BeverageDetailId");

                    b.HasIndex("FruitDetailId");

                    b.HasIndex("GroceryDetailId");

                    b.HasIndex("VegetableDetailId");

                    b.ToTable("ordermasters");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"), 1L, 1);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.Property<int>("OrderMasterId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("OrderMasterId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Vegetables", b =>
                {
                    b.Property<int>("VegetableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VegetableId"), 1L, 1);

                    b.Property<string>("VegetableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("VegetablePrice")
                        .HasColumnType("real");

                    b.Property<int>("VegetableQty")
                        .HasColumnType("int");

                    b.HasKey("VegetableId");

                    b.ToTable("vegetables");
                });

            modelBuilder.Entity("DepartmentalStore.Models.OrderDetail", b =>
                {
                    b.HasOne("DepartmentalStore.Models.Customer", "cutstomers")
                        .WithMany("orderdetails")
                        .HasForeignKey("CustomerId");

                    b.HasOne("DepartmentalStore.Models.OrderMaster", "ordermasters")
                        .WithMany("orderDetails")
                        .HasForeignKey("OrderMasterId");

                    b.HasOne("DepartmentalStore.Models.Payment", "payments")
                        .WithMany("orderdetails")
                        .HasForeignKey("PaymentId");

                    b.Navigation("cutstomers");

                    b.Navigation("ordermasters");

                    b.Navigation("payments");
                });

            modelBuilder.Entity("DepartmentalStore.Models.OrderMaster", b =>
                {
                    b.HasOne("DepartmentalStore.Models.Beverages", "beverages")
                        .WithMany("ordermasters")
                        .HasForeignKey("BeverageDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DepartmentalStore.Models.Fruits", "fruits")
                        .WithMany("ordermasters")
                        .HasForeignKey("FruitDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DepartmentalStore.Models.Groceries", "groceries")
                        .WithMany("ordermasters")
                        .HasForeignKey("GroceryDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DepartmentalStore.Models.Vegetables", "vegetables")
                        .WithMany("ordermasters")
                        .HasForeignKey("VegetableDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("beverages");

                    b.Navigation("fruits");

                    b.Navigation("groceries");

                    b.Navigation("vegetables");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Payment", b =>
                {
                    b.HasOne("DepartmentalStore.Models.OrderMaster", "ordermasters")
                        .WithMany("payments")
                        .HasForeignKey("OrderMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ordermasters");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Beverages", b =>
                {
                    b.Navigation("ordermasters");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Customer", b =>
                {
                    b.Navigation("orderdetails");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Fruits", b =>
                {
                    b.Navigation("ordermasters");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Groceries", b =>
                {
                    b.Navigation("ordermasters");
                });

            modelBuilder.Entity("DepartmentalStore.Models.OrderMaster", b =>
                {
                    b.Navigation("orderDetails");

                    b.Navigation("payments");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Payment", b =>
                {
                    b.Navigation("orderdetails");
                });

            modelBuilder.Entity("DepartmentalStore.Models.Vegetables", b =>
                {
                    b.Navigation("ordermasters");
                });
#pragma warning restore 612, 618
        }
    }
}
